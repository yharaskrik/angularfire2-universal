{"version":3,"file":"firebase_list_observable.spec.js","sourceRoot":"","sources":["../../../src/database-deprecated/firebase_list_observable.spec.ts"],"names":[],"mappings":"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","sourcesContent":["import { FirebaseApp, FirebaseAppConfig, AngularFireModule} from 'angularfire2';\nimport { AngularFireDatabase, AngularFireDatabaseModule, FirebaseListObservable, FirebaseObjectFactory } from 'angularfire2/database-deprecated';\nimport { Observer } from 'rxjs/Observer';\nimport { map } from 'rxjs/operator/map';\nimport { FirebaseApp as FBApp } from '@firebase/app-types';\nimport { DataSnapshot, Reference } from '@firebase/database-types';\nimport { unwrapMapFn } from './utils';\n\nimport { TestBed, inject } from '@angular/core/testing';\nimport { COMMON_CONFIG } from './test-config';\n\ndescribe('FirebaseListObservable', () => {\n  let O: FirebaseListObservable<any>;\n  let ref: Reference;\n  let app: FBApp;\n  let db: AngularFireDatabase;\n\n  beforeEach(() => {\n    TestBed.configureTestingModule({\n      imports: [\n        AngularFireModule.initializeApp(COMMON_CONFIG),\n        AngularFireDatabaseModule\n      ]\n    });\n    inject([FirebaseApp, AngularFireDatabase], (_app: FBApp, _db: AngularFireDatabase) => {\n      app = _app;\n      db = _db;\n      ref = app.database().ref();\n      O = new FirebaseListObservable(ref, (observer:Observer<any>) => {\n      });\n    })();\n  });\n\n  afterEach(done => {\n    app.delete().then(done, done.fail);\n    ref.off();\n    ref.remove(done);\n  });\n\n  it('should return an instance of FirebaseObservable when calling operators', () => {\n    O = new FirebaseListObservable(ref, (observer:Observer<any>) => {\n    });\n    expect(map.call(O, noop) instanceof FirebaseListObservable).toBe(true);\n  });\n\n  describe('$ref', () => {\n    it('should match the database path passed in the constructor', () => {\n      expect(O.$ref.toString()).toEqual(ref.toString());\n    });\n  });\n\n  describe('push', () => {\n    it('should throw an exception if pushed when not subscribed', () => {\n      O = new FirebaseListObservable(null!, (observer:Observer<any>) => {});\n\n      expect(() => {\n        O.push('foo');\n      }).toThrowError('No ref specified for this Observable!')\n    });\n\n    it('should resolve returned thenable when successful', (done:any) => {\n      O.push('foo').then(done, done.fail);\n    });\n  });\n\n  describe('remove', () => {\n    let orphan = { orphan: true };\n    let child:Reference;\n\n    beforeEach(() => {\n      child = ref.push(orphan);\n    });\n\n    it('should remove the item from the Firebase db when given the key', (done:any) => {\n      let childAddedSpy = jasmine.createSpy('childAdded');\n\n      ref.on('child_added', childAddedSpy);\n      O.remove(child.key!)\n        .then(() => (<any>ref).once('value'))\n        .then((data:DataSnapshot) => {\n          expect(childAddedSpy.calls.argsFor(0)[0].val()).toEqual(orphan);\n          expect(data.val()).toBeNull();\n          ref.off();\n        })\n        .then(done, done.fail);\n    });\n\n\n    it('should remove the item from the Firebase db when given the reference', (done:any) => {\n      let childAddedSpy = jasmine.createSpy('childAdded');\n\n      ref.on('child_added', childAddedSpy);\n\n      O.remove(child)\n        .then(() => (<any>ref).once('value'))\n        .then((data:DataSnapshot) => {\n          expect(childAddedSpy.calls.argsFor(0)[0].val()).toEqual(orphan);\n          expect(data.val()).toBeNull();\n          ref.off();\n        })\n        .then(done, done.fail);\n    });\n\n\n    it('should remove the item from the Firebase db when given the snapshot', (done:any) => {\n      ref.on('child_added', (data:DataSnapshot) => {\n        expect(data.val()).toEqual(orphan);\n        O.remove(data)\n          .then(() => (<any>ref).once('value'))\n          .then((data:DataSnapshot) => {\n            expect(data.val()).toBeNull();\n            ref.off();\n          })\n          .then(done, done.fail);\n      });\n    });\n\n\n    it('should remove the item from the Firebase db when given the unwrapped snapshot', (done:any) => {\n      ref.on('child_added', (data:DataSnapshot) => {\n        expect(data.val()).toEqual(orphan);\n        O.remove(unwrapMapFn(data))\n          .then(() => (<any>ref).once('value'))\n          .then((data:DataSnapshot) => {\n            expect(data.val()).toBeNull();\n            ref.off();\n          })\n          .then(done, done.fail);\n      });\n    });\n\n    it('should remove the whole list if no item is added', () => {\n      O.remove()\n        .then(() => (<any>ref).once('value'))\n        .then((data:DataSnapshot) => {\n          expect(data.val()).toBe(null);\n        });\n    });\n\n\n    it('should throw an exception if input is not supported', () => {\n      let input = (<any>{lol:true});\n      expect(() => O.remove(input)).toThrowError(`Method requires a key, snapshot, reference, or unwrapped snapshot. Got: ${typeof input}`);\n    })\n  });\n\n\n  describe('set', () => {\n    let orphan = { orphan: true };\n    let child:Reference;\n\n    beforeEach(() => {\n      child = ref.push(orphan);\n    });\n\n    it('should set(replace) the item from the Firebase db when given the key', (done:any) => {\n      let childChangedSpy = jasmine.createSpy('childChanged');\n      const orphanChange = { changed: true }\n      ref.on('child_changed', childChangedSpy);\n      O.set(child.key!, orphanChange)\n        .then(() => (<any>ref).once('value'))\n        .then((data:DataSnapshot) => {\n          expect(childChangedSpy.calls.argsFor(0)[0].val()).not.toEqual({\n            orphan: true,\n            changed: true\n          });\n          expect(childChangedSpy.calls.argsFor(0)[0].val()).toEqual({\n            changed: true\n          });\n\n          ref.off();\n        })\n        .then(done, done.fail);\n    });\n\n    it('should set(replace) the item from the Firebase db when given the reference', (done:any) => {\n      let childChangedSpy = jasmine.createSpy('childChanged');\n      const orphanChange = { changed: true }\n      ref.on('child_changed', childChangedSpy);\n      O.set(child.ref, orphanChange)\n        .then(() => (<any>ref).once('value'))\n        .then((data:DataSnapshot) => {\n          expect(childChangedSpy.calls.argsFor(0)[0].val()).not.toEqual({\n            orphan: true,\n            changed: true\n          });\n          expect(childChangedSpy.calls.argsFor(0)[0].val()).toEqual({\n            changed: true\n          });\n\n          ref.off();\n        })\n        .then(done, done.fail);\n    });\n\n    it('should set(replace) the item from the Firebase db when given the snapshot', (done:any) => {\n      let childChangedSpy = jasmine.createSpy('childChanged');\n      const orphanChange = { changed: true }\n      ref.on('child_changed', childChangedSpy);\n      O.set(child, orphanChange)\n        .then(() => (<any>ref).once('value'))\n        .then((data:DataSnapshot) => {\n          expect(childChangedSpy.calls.argsFor(0)[0].val()).not.toEqual({\n            orphan: true,\n            changed: true\n          });\n          expect(childChangedSpy.calls.argsFor(0)[0].val()).toEqual({\n            changed: true\n          });\n\n          ref.off();\n        })\n        .then(done, done.fail);\n    });\n\n    it('should set(replace) the item from the Firebase db when given the unwrapped snapshot', (done:any) => {\n      const orphanChange = { changed: true }\n      ref.on('child_added', (data:DataSnapshot) => {\n        expect(data.val()).toEqual(orphan);\n        O.set(unwrapMapFn(data), orphanChange)\n          .then(() => (<any>child).once('value'))\n          .then((data:DataSnapshot) => {\n            expect(data.val()).not.toEqual({\n              orphan: true,\n              changed: true\n            });\n            expect(data.val()).toEqual({\n              changed: true\n            });\n            ref.off();\n          })\n          .then(done, done.fail);\n      });\n    });\n\n  });\n\n\n\n  describe('update', () => {\n    let orphan = { orphan: true };\n    let child:Reference;\n\n    beforeEach(() => {\n      child = ref.push(orphan);\n    });\n\n    it('should update the item from the Firebase db when given the key', (done:any) => {\n      let childChangedSpy = jasmine.createSpy('childChanged');\n      const orphanChange = { changed: true }\n      ref.on('child_changed', childChangedSpy);\n      O.update(child.key!, orphanChange)\n        .then(() => (<any>ref).once('value'))\n        .then((data:DataSnapshot) => {\n          expect(childChangedSpy.calls.argsFor(0)[0].val()).toEqual({\n            orphan: true,\n            changed: true\n          });\n\n          ref.off();\n        })\n        .then(done, done.fail);\n    });\n\n    it('should update the item from the Firebase db when given the reference', (done:any) => {\n      let childChangedSpy = jasmine.createSpy('childChanged');\n      const orphanChange = { changed: true }\n      ref.on('child_changed', childChangedSpy);\n      O.update(child.ref, orphanChange)\n        .then(() => (<any>ref).once('value'))\n        .then((data:DataSnapshot) => {\n          expect(childChangedSpy.calls.argsFor(0)[0].val()).toEqual({\n            orphan: true,\n            changed: true\n          });\n\n          ref.off();\n        })\n        .then(done, done.fail);\n    });\n\n    it('should update the item from the Firebase db when given the snapshot', (done:any) => {\n      let childChangedSpy = jasmine.createSpy('childChanged');\n      const orphanChange = { changed: true }\n      ref.on('child_changed', childChangedSpy);\n      O.update(child, orphanChange)\n        .then(() => (<any>ref).once('value'))\n        .then((data:DataSnapshot) => {\n          expect(childChangedSpy.calls.argsFor(0)[0].val()).toEqual({\n            orphan: true,\n            changed: true\n          });\n\n          ref.off();\n        })\n        .then(done, done.fail);\n    });\n\n    it('should update the item from the Firebase db when given the unwrapped snapshot', (done:any) => {\n      const orphanChange = { changed: true }\n      ref.on('child_added', (data:DataSnapshot) => {\n        expect(data.val()).toEqual(orphan);\n        O.update(unwrapMapFn(data), orphanChange)\n          .then(() => (<any>child).once('value'))\n          .then((data:DataSnapshot) => {\n            expect(data.val()).toEqual({\n              orphan: true,\n              changed: true\n            });\n            ref.off();\n          })\n          .then(done, done.fail);\n      });\n    });\n\n  });\n\n});\n\nfunction noop() {}\n"]}