{"version":3,"file":"angularfire2.js","sourceRoot":"","sources":["../../src/core/angularfire2.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,cAAc,EAAU,MAAM,eAAe,CAAC;AAEvD,OAAO,EAAE,UAAU,EAAE,MAAM,iBAAiB,CAAC;AAC7C,OAAO,EAAE,KAAK,EAAE,MAAM,sBAAsB,CAAC;AAK7C,OAAO,SAAS,CAAC;AACjB,OAAO,yBAAyB,CAAC;AAEjC,OAAO,EAAE,SAAS,EAAE,MAAM,yBAAyB,CAAC;AAEpD,MAAM,CAAC,IAAM,eAAe,GAAG,IAAI,cAAc,CAAS,sBAAsB,CAAC,CAAC;AAClF,MAAM,CAAC,IAAM,iBAAiB,GAAG,IAAI,cAAc,CAAkB,qBAAqB,CAAC,CAAC;AAG5F,MAAM,CAAC,IAAM,mBAAmB,GAAG,IAAI,cAAc,CAAS,kCAAkC,CAAC,CAAC;AAElG,IAAA;IACE,+BAAmB,IAAY;QAAZ,SAAI,GAAJ,IAAI,CAAQ;KAAI;IACnC,wCAAQ,GAAR;QAAS,cAAc;aAAd,UAAc,EAAd,qBAAc,EAAd,IAAc;YAAd,yBAAc;;QACrB,MAAM,CAAe,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,cAAa,MAAM,CAAC,KAAK,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAK,EAAE,IAAI,CAAC,CAAA,EAAC,CAAC,CAAC;KACnG;IAED,sDAAsB,GAAtB,UAA0B,IAAmB;QAA7C,iBAOC;QANC,MAAM,CAAC,IAAI,UAAU,CAAI,UAAA,UAAU;YACjC,IAAM,IAAI,GAAG,eAAQ,CAAC;YACtB,IAAM,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,iBAAiB,CAAC,mBAAmB,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;YACvF,IAAI,CAAC,KAAK,EAAE,CAAC,SAAS,CAAC,cAAM,OAAA,KAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,cAAM,OAAA,IAAI,CAAC,MAAM,EAAE,EAAb,CAAa,CAAC,EAAhD,CAAgD,CAAC,CAAC;YAC/E,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC;SACnC,CAAC,CAAC;KACJ;IACD,iDAAiB,GAAjB,UAAqB,IAAmB;QAAxC,iBAOC;QANC,IAAM,cAAc,GAAG,IAAI,UAAU,CAAI,UAAA,UAAU;YACjD,MAAM,CAAC,KAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC;gBACjC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC;aACnC,CAAC,CAAC;SACJ,CAAC,CAAC;QACH,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,cAAc,EAAE,IAAI,CAAC,CAAC;KAC7C;gCAxCH;IAyCC,CAAA;AAtBD,iCAsBC","sourcesContent":["import { InjectionToken, NgZone } from '@angular/core';\nimport { Subscription } from 'rxjs/Subscription';\nimport { Observable } from 'rxjs/Observable';\nimport { queue } from 'rxjs/scheduler/queue';\n\nimport firebase from '@firebase/app';\nimport { FirebaseApp, FirebaseOptions } from '@firebase/app-types';\n\nimport 'zone.js';\nimport 'rxjs/add/operator/first';\nimport { Subscriber } from 'rxjs/Subscriber';\nimport { observeOn } from 'rxjs/operator/observeOn';\n\nexport const FirebaseAppName = new InjectionToken<string>('angularfire2.appName');\nexport const FirebaseAppConfig = new InjectionToken<FirebaseOptions>('angularfire2.config');\n\n// Put in database.ts when we drop database-depreciated\nexport const RealtimeDatabaseURL = new InjectionToken<string>('angularfire2.realtimeDatabaseURL');\n\nexport class FirebaseZoneScheduler {\n  constructor(public zone: NgZone) {}\n  schedule(...args: any[]): Subscription {\n    return <Subscription>this.zone.runGuarded(function() { return queue.schedule.apply(queue, args)});\n  }\n  // TODO this is a hack, clean it up\n  keepUnstableUntilFirst<T>(obs$: Observable<T>) {\n    return new Observable<T>(subscriber => {\n      const noop = () => {};\n      const task = Zone.current.scheduleMacroTask('firebaseZoneBlock', noop, {}, noop, noop);\n      obs$.first().subscribe(() => this.zone.runOutsideAngular(() => task.invoke()));\n      return obs$.subscribe(subscriber);\n    });\n  }\n  runOutsideAngular<T>(obs$: Observable<T>): Observable<T> {\n    const outsideAngular = new Observable<T>(subscriber => {\n      return this.zone.runOutsideAngular(() => {\n        return obs$.subscribe(subscriber);\n      });\n    });\n    return observeOn.call(outsideAngular, this);\n  }\n}"]}