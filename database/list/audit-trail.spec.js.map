{"version":3,"file":"audit-trail.spec.js","sourceRoot":"","sources":["../../../../src/database/list/audit-trail.spec.ts"],"names":[],"mappings":"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","sourcesContent":["import { Reference } from '@firebase/database-types';\nimport { FirebaseApp, FirebaseAppConfig, AngularFireModule } from 'angularfire2';\nimport { AngularFireDatabase, AngularFireDatabaseModule, auditTrail, ChildEvent } from 'angularfire2/database';\nimport { TestBed, inject } from '@angular/core/testing';\nimport { COMMON_CONFIG } from '../test-config';\nimport 'rxjs/add/operator/skip';\n\n// generate random string to test fidelity of naming\nconst rando = () => (Math.random() + 1).toString(36).substring(7);\nconst FIREBASE_APP_NAME = rando();\n\ndescribe('auditTrail', () => {\n  let app: FirebaseApp;\n  let db: AngularFireDatabase;\n  let createRef: (path: string) => Reference;\n  let batch = {};\n  const items = [{ name: 'zero' }, { name: 'one' }, { name: 'two' }].map((item, i) => ( { key: i.toString(), ...item } ));\n  Object.keys(items).forEach(function (key, i) {\n    const itemValue = items[key];\n    batch[i] = itemValue;\n  });\n  // make batch immutable to preserve integrity\n  batch = Object.freeze(batch);\n\n  beforeEach(() => {\n    TestBed.configureTestingModule({\n      imports: [\n        AngularFireModule.initializeApp(COMMON_CONFIG, FIREBASE_APP_NAME),\n        AngularFireDatabaseModule\n      ]\n    });\n    inject([FirebaseApp, AngularFireDatabase], (app_: FirebaseApp, _db: AngularFireDatabase) => {\n      app = app_;\n      db = _db;\n      app.database().goOffline();\n      createRef = (path: string) => { app.database().goOffline(); return app.database().ref(path); };\n    })();\n  });\n\n  afterEach(done => {\n    app.delete().then(done, done.fail);\n  });\n\n  function prepareAuditTrail(opts: { events?: ChildEvent[], skip: number } = { skip: 0 }) {\n    const { events, skip } = opts;\n    const aref = createRef(rando());\n    aref.set(batch);\n    const changes = auditTrail(aref, events);\n    return {\n      changes: changes.skip(skip),\n      ref: aref\n    };\n  }\n\n  it('should listen to all events by default', (done) => {\n\n    const { changes } = prepareAuditTrail();\n    changes.subscribe(actions => {\n      const data = actions.map(a => a.payload.val());\n      expect(data).toEqual(items);\n      done();\n    });\n\n  });\n\n});\n"]}