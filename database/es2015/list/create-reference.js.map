{"version":3,"file":"create-reference.js","sourceRoot":"","sources":["../../../../../src/database/list/create-reference.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,eAAe,EAAE,MAAM,oBAAoB,CAAC;AACrD,OAAO,EAAE,kBAAkB,EAAE,MAAM,iBAAiB,CAAC;AACrD,OAAO,EAAE,gBAAgB,EAAE,MAAM,eAAe,CAAC;AACjD,OAAO,EAAE,yBAAyB,EAAE,MAAM,kBAAkB,CAAC;AAC7D,OAAO,EAAE,kBAAkB,EAAE,MAAM,UAAU,CAAC;AAG9C,MAAM,8BAAiC,KAAoB,EAAE,UAA+B;IAC1F,MAAM,CAAC;QACL,KAAK;QACL,MAAM,EAAE,yBAAyB,CAAa,KAAK,CAAC,GAAG,EAAE,QAAQ,CAAC;QAClE,GAAG,EAAE,yBAAyB,CAAI,KAAK,CAAC,GAAG,EAAE,KAAK,CAAC;QACnD,IAAI,EAAE,CAAC,IAAO,KAAK,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC;QACvC,MAAM,EAAE,kBAAkB,CAAC,KAAK,CAAC,GAAG,CAAC;QACrC,eAAe,CAAC,MAAqB;YACnC,MAAM,gBAAgB,GAAG,eAAe,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;YACxD,MAAM,CAAC,UAAU,CAAC,SAAS,CAAC,sBAAsB,CAAC,gBAAgB,CAAC,CAAC;SACtE;QACD,YAAY,EAAE,kBAAkB,CAAC,KAAK,EAAE,UAAU,CAAC;QACnD,UAAU,EAAE,gBAAgB,CAAC,KAAK,EAAE,UAAU,CAAC;QAC/C,YAAY,CAAI,MAAqB;YACnC,MAAM,gBAAgB,GAAG,eAAe,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;YACxD,MAAM,CAAC,UAAU,CAAC,SAAS,CAAC,sBAAsB,CAAC,gBAAgB,CAAC;iBACjE,GAAG,CAAC,OAAO,IAAI,OAAO,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;SACtD;KACF,CAAA;CACF","sourcesContent":["import { DatabaseQuery, AngularFireList, ChildEvent } from '../interfaces';\nimport { snapshotChanges } from './snapshot-changes';\nimport { createStateChanges } from './state-changes';\nimport { createAuditTrail } from './audit-trail';\nimport { createDataOperationMethod } from './data-operation';\nimport { createRemoveMethod } from './remove';\nimport { AngularFireDatabase } from '../database';\n\nexport function createListReference<T>(query: DatabaseQuery, afDatabase: AngularFireDatabase): AngularFireList<T> {\n  return {\n    query,\n    update: createDataOperationMethod<Partial<T>>(query.ref, 'update'),\n    set: createDataOperationMethod<T>(query.ref, 'set'),\n    push: (data: T) => query.ref.push(data),\n    remove: createRemoveMethod(query.ref),\n    snapshotChanges(events?: ChildEvent[]) {\n      const snapshotChanges$ = snapshotChanges(query, events);\n      return afDatabase.scheduler.keepUnstableUntilFirst(snapshotChanges$);\n    },\n    stateChanges: createStateChanges(query, afDatabase),\n    auditTrail: createAuditTrail(query, afDatabase),\n    valueChanges<T>(events?: ChildEvent[]) { \n      const snapshotChanges$ = snapshotChanges(query, events);\n      return afDatabase.scheduler.keepUnstableUntilFirst(snapshotChanges$)\n        .map(actions => actions.map(a => a.payload.val())); \n    }\n  }\n}\n"]}