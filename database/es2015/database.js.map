{"version":3,"file":"database.js","sourceRoot":"","sources":["../../../../src/database/database.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,EAAE,QAAQ,EAAE,MAAM,EAAE,MAAM,eAAe,CAAC;AAGrE,OAAO,EAAE,MAAM,EAAE,MAAM,SAAS,CAAC;AAGjC,OAAO,EAAE,mBAAmB,EAAE,MAAM,yBAAyB,CAAC;AAC9D,OAAO,EAAE,qBAAqB,EAAE,MAAM,2BAA2B,CAAC;AAClE,OAAO,EAAE,iBAAiB,EAAE,eAAe,EAAE,mBAAmB,EAAE,mBAAmB,EAAE,qBAAqB,EAAE,MAAM,cAAc,CAAC;AAGnI,MAAM;IAIJ,YAC6B,QACU,MACI,aACzC,IAAY;QAEZ,IAAI,CAAC,SAAS,GAAG,IAAI,qBAAqB,CAAC,IAAI,CAAC,CAAC;QACjD,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,iBAAiB,CAAC;YACrC,MAAM,GAAG,GAAG,mBAAmB,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;YAC9C,MAAM,CAAC,GAAG,CAAC,QAAQ,CAAC,WAAW,IAAI,SAAS,CAAC,CAAC;SAC/C,CAAC,CAAC;KACJ;IAED,IAAI,CAAI,SAAwB,EAAE,OAAiB;QACjD,MAAM,GAAG,GAAG,MAAM,CAAC,IAAI,CAAC,QAAQ,EAAE,SAAS,CAAC,CAAC;QAC7C,IAAI,KAAK,GAAkB,GAAG,CAAC;QAC/B,EAAE,CAAA,CAAC,OAAO,CAAC,CAAC,CAAC;YACX,KAAK,GAAG,OAAO,CAAC,GAAG,CAAC,CAAC;SACtB;QACD,MAAM,CAAC,mBAAmB,CAAI,KAAK,EAAE,IAAI,CAAC,CAAC;KAC5C;IAED,MAAM,CAAI,SAAwB;QAChC,MAAM,GAAG,GAAG,MAAM,CAAC,IAAI,CAAC,QAAQ,EAAE,SAAS,CAAC,CAAC;QAC7C,MAAM,CAAC,qBAAqB,CAAI,GAAG,EAAE,IAAI,CAAC,CAAC;KAC5C;IAED,YAAY;QACV,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,EAAE,CAAC,IAAI,EAAE,CAAC,GAAG,CAAC;KACvC;;;YAlCF,UAAU;;;4CAMN,MAAM,SAAC,iBAAiB;4CACxB,QAAQ,YAAI,MAAM,SAAC,eAAe;4CAClC,QAAQ,YAAI,MAAM,SAAC,mBAAmB;YAlBJ,MAAM;;AA+D7C,OAAO,EAAE,mBAAmB,EAAE,CAAC","sourcesContent":["import { Injectable, Inject, Optional, NgZone } from '@angular/core';\nimport { FirebaseDatabase } from '@firebase/database-types';\nimport { PathReference, DatabaseQuery, DatabaseReference, DatabaseSnapshot, ChildEvent, ListenEvent, QueryFn, AngularFireList, AngularFireObject } from './interfaces';\nimport { getRef } from './utils';\nimport { InjectionToken } from '@angular/core';\nimport { FirebaseOptions } from '@firebase/app-types';\nimport { createListReference } from './list/create-reference';\nimport { createObjectReference } from './object/create-reference';\nimport { FirebaseAppConfig, FirebaseAppName, RealtimeDatabaseURL, _firebaseAppFactory, FirebaseZoneScheduler } from 'angularfire2';\n\n@Injectable()\nexport class AngularFireDatabase {\n  public readonly database: FirebaseDatabase;\n  public readonly scheduler: FirebaseZoneScheduler;\n\n  constructor(\n    @Inject(FirebaseAppConfig) config:FirebaseOptions,\n    @Optional() @Inject(FirebaseAppName) name:string,\n    @Optional() @Inject(RealtimeDatabaseURL) databaseURL:string,\n    zone: NgZone\n  ) {\n    this.scheduler = new FirebaseZoneScheduler(zone);\n    this.database = zone.runOutsideAngular(() => {\n      const app = _firebaseAppFactory(config, name);\n      return app.database(databaseURL || undefined);\n    });\n  }\n\n  list<T>(pathOrRef: PathReference, queryFn?: QueryFn): AngularFireList<T> {\n    const ref = getRef(this.database, pathOrRef);\n    let query: DatabaseQuery = ref;\n    if(queryFn) {\n      query = queryFn(ref);\n    }\n    return createListReference<T>(query, this);\n  }\n\n  object<T>(pathOrRef: PathReference): AngularFireObject<T>  {\n    const ref = getRef(this.database, pathOrRef);\n    return createObjectReference<T>(ref, this);\n  }\n\n  createPushId() {\n    return this.database.ref().push().key;\n  }\n\n}\n\nexport {\n  PathReference,\n  DatabaseQuery,\n  DatabaseReference,\n  DatabaseSnapshot,\n  ChildEvent,\n  ListenEvent,\n  QueryFn,\n  AngularFireList,\n  AngularFireObject,\n  AngularFireAction,\n  Action,\n  SnapshotAction\n} from './interfaces';\n\nexport { RealtimeDatabaseURL };"]}